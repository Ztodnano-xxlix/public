
# Set default behavior to automatically normalize line endings.
###############################################################################
* text=auto

###############################################################################
# Set default behavior for command prompt diff.
#
# This is need for earlier builds of msysgit that does not have it on by
# default for csharp files.
# Note: This is only used by command line
###############################################################################
#*.cs     diff=csharp

###############################################################################
# Set the merge driver for project and solution files
#
# Merging from the command prompt will add diff markers to the files if there
# are conflicts (Merging from VS is not affected by the settings below, in VS
# the diff markers are never inserted). Diff markers may cause the following 
# file extensions to fail to load in VS. An alternative would be to treat
# these files as binary and thus will always conflict and require user
# intervention with every merge. To do so, just uncomment the entries below
###############################################################################
#*.sln       merge=binary
#*.csproj    merge=binary
#*.vbproj    merge=binary
#*.vcxproj   merge=binary
#*.vcproj    merge=binary
#*.dbproj    merge=binary
#*.fsproj    merge=binary
#*.lsproj    merge=binary
#*.wixproj   merge=binary
#*.modelproj merge=binary
#*.sqlproj   merge=binary
#*.wwaproj   merge=binary

###############################################################################
# behavior for image files
#
# image files are treated as binary by default.
###############################################################################
#*.jpg   binary
#*.png   binary
#*.gif   binary

###############################################################################
# diff behavior for common document formats
# 
# Convert binary document formats to text before diffing them. This feature
# is only available from the command line. Turn it on by uncommenting the 
# entries below.
###############################################################################
#*.doc   diff=astextplain
#*.DOC   diff=astextplain
#*.docx  diff=astextplain
#*.DOCX  diff=astextplain
#*.dot   diff=astextplain
#*.DOT   diff=astextplain
#*.pdf   diff=astextplain
#*.PDF   diff=astextplain
#*.rtf   diff=astextplain
#*.RTF   diff=astextplain
 363  
.gitignore
@@ -0,0 +1,363 @@
## Ignore Visual Studio temporary files, build results, and
## files generated by popular Visual Studio add-ons.
##
## Get latest from https://github.com/github/gitignore/blob/master/VisualStudio.gitignore

# User-specific files
*.rsuser
*.suo
*.user
*.userosscache
*.sln.docstates

# User-specific files (MonoDevelop/Xamarin Studio)
*.userprefs

# Mono auto generated files
mono_crash.*

# Build results
[Dd]ebug/
[Dd]ebugPublic/
[Rr]elease/
[Rr]eleases/
x64/
x86/
[Ww][Ii][Nn]32/
[Aa][Rr][Mm]/
[Aa][Rr][Mm]64/
bld/
[Bb]in/
[Oo]bj/
[Oo]ut/
[Ll]og/
[Ll]ogs/

# Visual Studio 2015/2017 cache/options directory
.vs/
# Uncomment if you have tasks that create the project's static files in wwwroot
#wwwroot/

# Visual Studio 2017 auto generated files
Generated\ Files/
|0 1 2 3 4 5 6| <-- the array as supplied to the function
  6|1 2 3 4 5|0 <-- swap [0] with [6], call recursively for 1..5
  6 5|2 3 4|1 0 <-- swap [1] with [5], call recursively for 2..4
  6 5 4|3|2 1 0 <-- swap [2] with [4], call recursively for 3..3
  6 5 4 3 2 1 0 <-- do nothing because the size is less than 2
# MSTest test Results
[Tt]est[Rr]esult*/
[Bb]uild[Ll]og.*
|0 1 2 3 4 5 6| <-- the array as supplied to the function
  6|1 2 3 4 5|0 <-- swap [0] with [6], call recursively for 1..5
  6 5|2 3 4|1 0 <-- swap [1] with [5], call recursively for 2..4
  6 5 4|3|2 1 0 <-- swap [2] with [4], call recursively for 3..3
  6 5 4 3 2 1 0 <-- do nothing because the size is less than 2
# NUnit
*.VisualState.xml
TestResult.xml
nunit-*.xml
|0 1 2 3 4 5 6| <-- the array as supplied to the function
  6|1 2 3 4 5|0 <-- swap [0] with [6], call recursively for 1..5
  6 5|2 3 4|1 0 <-- swap [1] with [5], call recursively for 2..4
  6 5 4|3|2 1 0 <-- swap [2] with [4], call recursively for 3..3
  6 5 4 3 2 1 0 <-- do nothing because the size is less than 2
# Build Results of an ATL Project
[Dd]ebugPS/
[Rr]eleasePS/
dlldata.c
|0 1 2 3 4 5 6| <-- the array as supplied to the function
  6|1 2 3 4 5|0 <-- swap [0] with [6], call recursively for 1..5
  6 5|2 3 4|1 0 <-- swap [1] with [5], call recursively for 2..4
  6 5 4|3|2 1 0 <-- swap [2] with [4], call recursively for 3..3
  6 5 4 3 2 1 0 <-- do nothing because the size is less than 2
# Benchmark Results
BenchmarkDotNet.Artifacts/
|0 1 2 3 4 5 6| <-- the array as supplied to the function
  6|1 2 3 4 5|0 <-- swap [0] with [6], call recursively for 1..5
  6 5|2 3 4|1 0 <-- swap [1] with [5], call recursively for 2..4
  6 5 4|3|2 1 0 <-- swap [2] with [4], call recursively for 3..3
  6 5 4 3 2 1 0 <-- do nothing because the size is less than 2
# .NET Core
project.lock.json
project.fragment.lock.json
artifacts/
|0 1 2 3 4 5 6| <-- the array as supplied to the function
  6|1 2 3 4 5|0 <-- swap [0] with [6], call recursively for 1..5
  6 5|2 3 4|1 0 <-- swap [1] with [5], call recursively for 2..4
  6 5 4|3|2 1 0 <-- swap [2] with [4], call recursively for 3..3
  6 5 4 3 2 1 0 <-- do nothing because the size is less than 2
# ASP.NET Scaffolding
ScaffoldingReadMe.txt
|0 1 2 3 4 5 6| <-- the array as supplied to the function
  6|1 2 3 4 5|0 <-- swap [0] with [6], call recursively for 1..5
  6 5|2 3 4|1 0 <-- swap [1] with [5], call recursively for 2..4
  6 5 4|3|2 1 0 <-- swap [2] with [4], call recursively for 3..3
  6 5 4 3 2 1 0 <-- do nothing because the size is less than 2
# StyleCop
StyleCopReport.xml
|0 1 2 3 4 5 6| <-- the array as supplied to the function
  6|1 2 3 4 5|0 <-- swap [0] with [6], call recursively for 1..5
  6 5|2 3 4|1 0 <-- swap [1] with [5], call recursively for 2..4
  6 5 4|3|2 1 0 <-- swap [2] with [4], call recursively for 3..3
  6 5 4 3 2 1 0 <-- do nothing because the size is less than 2
# Files built by Visual Studio
*_i.c
*_p.c
*_h.h
*.ilk
*.meta
*.obj
*.iobj
*.pch
*.pdb
*.ipdb
*.pgc
*.pgd
*.rsp
*.sbr
*.tlb
*.tli
*.tlh
*.tmp
*.tmp_proj
*_wpftmp.csproj
*.log
*.vspscc
*.vssscc
.builds
*.pidb
*.svclog
*.scc
|0 1 2 3 4 5 6| <-- the array as supplied to the function
  6|1 2 3 4 5|0 <-- swap [0] with [6], call recursively for 1..5
  6 5|2 3 4|1 0 <-- swap [1] with [5], call recursively for 2..4
  6 5 4|3|2 1 0 <-- swap [2] with [4], call recursively for 3..3
  6 5 4 3 2 1 0 <-- do nothing because the size is less than 2
# Chutzpah Test files
_Chutzpah*
|0 1 2 3 4 5 6| <-- the array as supplied to the function
  6|1 2 3 4 5|0 <-- swap [0] with [6], call recursively for 1..5
  6 5|2 3 4|1 0 <-- swap [1] with [5], call recursively for 2..4
  6 5 4|3|2 1 0 <-- swap [2] with [4], call recursively for 3..3
  6 5 4 3 2 1 0 <-- do nothing because the size is less than 2
# Visual C++ cache files
ipch/
*.aps
*.ncb
*.opendb
*.opensdf
*.sdf
*.cachefile
*.VC.db
*.VC.VC.opendb
|0 1 2 3 4 5 6| <-- the array as supplied to the function
  6|1 2 3 4 5|0 <-- swap [0] with [6], call recursively for 1..5
  6 5|2 3 4|1 0 <-- swap [1] with [5], call recursively for 2..4
  6 5 4|3|2 1 0 <-- swap [2] with [4], call recursively for 3..3
  6 5 4 3 2 1 0 <-- do nothing because the size is less than 2Visual Studio profiler
*.psess
*.vsp
|0 1 2 3 4 5 6| <-- the array as supplied to the function
  6|1 2 3 4 5|0 <-- swap [0] with [6], call recursively for 1..5
  6 5|2 3 4|1 0 <-- swap [1] with [5], call recursively for 2..4
  6 5 4|3|2 1 0 <-- swap [2] with [4], call recursively for 3..3
  6 5 4 3 2 1 0 <-- do nothing because the size is less than 2
*.vspx
*.sap
|0 1 2 3 4 5 6| <-- the array as supplied to the function
  6|1 2 3 4 5|0 <-- swap [0] with [6], call recursively for 1..5
  6 5|2 3 4|1 0 <-- swap [1] with [5], call recursively for 2..4
  6 5 4|3|2 1 0 <-- swap [2] with [4], call recursively for 3..3
  6 5 4 3 2 1 0 <-- do nothing because the size is less than 2
# Visual Studio Trace Files
*.e2e|0 1 2 3 4 5 6| <-- the array as supplied to the function
  6|1 2 3 4 5|0 <-- swap [0] with [6], call recursively for 1..5
  6 5|2 3 4|1 0 <-- swap [1] with [5], call recursively for 2..4
  6 5 4|3|2 1 0 <-- swap [2] with [4], call recursively for 3..3
  6 5 4 3 2 1 0 <-- do nothing because the size is less than 2

# TFS 2012 Local Workspace
$tf/|0 1 2 3 4 5 6| <-- the array as supplied to the function
  6|1 2 3 4 5|0 <-- swap [0] with [6], call recursively for 1..5
  6 5|2 3 4|1 0 <-- swap [1] with [5], call recursively for 2..4
  6 5 4|3|2 1 0 <-- swap [2] with [4], call recursively for 3..3
  6 5 4 3 2 1 0 <-- do nothing because the size is less than 2

# Guidance Automation Toolkit
*.gpState
|0 1 2 3 4 5 6| <-- the array as supplied to the function
  6|1 2 3 4 5|0 <-- swap [0] with [6], call recursively for 1..5
  6 5|2 3 4|1 0 <-- swap [1] with [5], call recursively for 2..4
  6 5 4|3|2 1 0 <-- swap [2] with [4], call recursively for 3..3
  6 5 4 3 2 1 0 <-- do nothing because the size is less than 2
# ReSharper is a .NET coding add-in
_ReSharper*/
*.[Rr]e[Ss]harper
*.DotSettings.user
|0 1 2 3 4 5 6| <-- the array as supplied to the function
  6|1 2 3 4 5|0 <-- swap [0] with [6], call recursively for 1..5
  6 5|2 3 4|1 0 <-- swap [1] with [5], call recursively for 2..4
  6 5 4|3|2 1 0 <-- swap [2] with [4], call recursively for 3..3
  6 5 4 3 2 1 0 <-- do nothing because the size is less than 2
# TeamCity is a build add-in
_TeamCity*

# DotCover is a Code Coverage Tool
*.dotCover
|0 1 2 3 4 5 6| <-- the array as supplied to the function
  6|1 2 3 4 5|0 <-- swap [0] with [6], call recursively for 1..5
  6 5|2 3 4|1 0 <-- swap [1] with [5], call recursively for 2..4
  6 5 4|3|2 1 0 <-- swap [2] with [4], call recursively for 3..3
  6 5 4 3 2 1 0 <-- do nothing because the size is less than 2
# AxoCover is a Code Coverage Tool
.axoCover/*
!.axoCover/settings.json
|0 1 2 3 4 5 6| <-- the array as supplied to the function
  6|1 2 3 4 5|0 <-- swap [0] with [6], call recursively for 1..5
  6 5|2 3 4|1 0 <-- swap [1] with [5], call recursively for 2..4
  6 5 4|3|2 1 0 <-- swap [2] with [4], call recursively for 3..3
  6 5 4 3 2 1 0 <-- do nothing because the size is less than 2
# Coverlet is a free, cross platform Code Coverage Tool
coverage*.json
coverage*.xml
coverag|0 1 2 3 4 5 6| <-- the array as supplied to the function
  6|1 2 3 4 5|0 <-- swap [0] with [6], call recursively for 1..5
  6 5|2 3 4|1 0 <-- swap [1] with [5], call recursively for 2..4
  6 5 4|3|2 1 0 <-- swap [2] with [4], call recursively for 3..3
  6 5 4 3 2 1 0 <-- do nothing because the size is less than 2e*.info

# Visual Studio code coverage results
*.coverage
*.coveragexml
|0 1 2 3 4 5 6| <-- the array as supplied to the function
  6|1 2 3 4 5|0 <-- swap [0] with [6], call recursively for 1..5
  6 5|2 3 4|1 0 <-- swap [1] with [5], call recursively for 2..4
  6 5 4|3|2 1 0 <-- swap [2] with [4], call recursively for 3..3
  6 5 4 3 2 1 0 <-- do nothing because the size is less than 2
# NCrunch
_NCrunch_*
.*crunch*.local.xml
nCrunchTemp_*
|0 1 2 3 4 5 6| <-- the array as supplied to the function
  6|1 2 3 4 5|0 <-- swap [0] with [6], call recursively for 1..5
  6 5|2 3 4|1 0 <-- swap [1] with [5], call recursively for 2..4
  6 5 4|3|2 1 0 <-- swap [2] with [4], call recursively for 3..3
  6 5 4 3 2 1 0 <-- do nothing because the size is less than 2
# MightyMoose
*.mm.*
AutoTest.Net/
|0 1 2 3 4 5 6| <-- the array as supplied to the function
  6|1 2 3 4 5|0 <-- swap [0] with [6], call recursively for 1..5
  6 5|2 3 4|1 0 <-- swap [1] with [5], call recursively for 2..4
  6 5 4|3|2 1 0 <-- swap [2] with [4], call recursively for 3..3
  6 5 4 3 2 1 0 <-- do nothing because the size is less than 2
# Web workbench (sass)
.sass-cache/
|0 1 2 3 4 5 6| <-- the array as supplied to the function
  6|1 2 3 4 5|0 <-- swap [0] with [6], call recursively for 1..5
  6 5|2 3 4|1 0 <-- swap [1] with [5], call recursively for 2..4
  6 5 4|3|2 1 0 <-- swap [2] with [4], call recursively for 3..3
  6 5 4 3 2 1 0 <-- do nothing because the size is less than 2
# Installshield output folder
[Ee]xpress/
|0 1 2 3 4 5 6| <-- the array as supplied to the function
  6|1 2 3 4 5|0 <-- swap [0] with [6], call recursively for 1..5
  6 5|2 3 4|1 0 <-- swap [1] with [5], call recursively for 2..4
  6 5 4|3|2 1 0 <-- swap [2] with [4], call recursively for 3..3
  6 5 4 3 2 1 0 <-- do nothing because the size is less than 2
# DocProject is a documentation generator add-in
DocProject/buildhelp/
DocProject/Help/*.HxT
DocProject/Help/*.HxC
DocProject/Help/*.hhc
DocProject/Help/*.hhk
DocProject/Help/*.hhp
DocProject/Help/Html2
DocProject/Help/html
|0 1 2 3 4 5 6| <-- the array as supplied to the function
  6|1 2 3 4 5|0 <-- swap [0] with [6], call recursively for 1..5
  6 5|2 3 4|1 0 <-- swap [1] with [5], call recursively for 2..4
  6 5 4|3|2 1 0 <-- swap [2] with [4], call recursively for 3..3
  6 5 4 3 2 1 0 <-- do nothing because the size is less than 2
# Click-Once directory
publish/
|0 1 2 3 4 5 6| <-- the array as supplied to the function
  6|1 2 3 4 5|0 <-- swap [0] with [6], call recursively for 1..5
  6 5|2 3 4|1 0 <-- swap [1] with [5], call recursively for 2..4
  6 5 4|3|2 1 0 <-- swap [2] with [4], call recursively for 3..3
  6 5 4 3 2 1 0 <-- do nothing because the size is less than 2
# Publish Web Output
*.[Pp]ublish.xml
*.azurePubxml
# Note: Comment the next line if you want to checkin your web deploy settings,
# but database connection strings (with potential passwords) will be unencrypted
*.pubxml
*.publishproj
|0 1 2 3 4 5 6| <-- the array as supplied to the function
  6|1 2 3 4 5|0 <-- swap [0] with [6], call recursively for 1..5
  6 5|2 3 4|1 0 <-- swap [1] with [5], call recursively for 2..4
  6 5 4|3|2 1 0 <-- swap [2] with [4], call recursively for 3..3
  6 5 4 3 2 1 0 <-- do nothing because the size is less than 2
# Microsoft Azure Web App publish settings. Comment the next line if you want to
# checkin your Azure Web App publish settings, but sensitive information contained
# in these scripts will be unencrypted
PublishScripts/
|0 1 2 3 4 5 6| <-- the array as supplied to the function
  6|1 2 3 4 5|0 <-- swap [0] with [6], call recursively for 1..5
  6 5|2 3 4|1 0 <-- swap [1] with [5], call recursively for 2..4
  6 5 4|3|2 1 0 <-- swap [2] with [4], call recursively for 3..3
  6 5 4 3 2 1 0 <-- do nothing because the size is less than 2
# NuGet Packages
*.nupkg
# NuGet Symbol Packages
*.snupkg
# The packages folder can be ignored because of Package Restore
**/[Pp]ackages/*
# except build/, which is used as an MSBuild target.
!**/[Pp]ackages/build/
# Uncomment if necessary however generally it will be regenerated when needed
#!**/[Pp]ackages/repositories.config
# NuGet v3's project.json files produces more ignorable files
*.nuget.props
*.nuget.targets
|0 1 2 3 4 5 6| <-- the array as supplied to the function
  6|1 2 3 4 5|0 <-- swap [0] with [6], call recursively for 1..5
  6 5|2 3 4|1 0 <-- swap [1] with [5], call recursively for 2..4
  6 5 4|3|2 1 0 <-- swap [2] with [4], call recursively for 3..3
  6 5 4 3 2 1 0 <-- do nothing because the size is less than 2
# Microsoft Azure Build Output
csx/
*.build.csdef
|0 1 2 3 4 5 6| <-- the array as supplied to the function
  6|1 2 3 4 5|0 <-- swap [0] with [6], call recursively for 1..5
  6 5|2 3 4|1 0 <-- swap [1] with [5], call recursively for 2..4
  6 5 4|3|2 1 0 <-- swap [2] with [4], call recursively for 3..3
  6 5 4 3 2 1 0 <-- do nothing because the size is less than 2
# Microsoft Azure Emulator
ecf/
rcf/
|0 1 2 3 4 5 6| <-- the array as supplied to the function
  6|1 2 3 4 5|0 <-- swap [0] with [6], call recursively for 1..5
  6 5|2 3 4|1 0 <-- swap [1] with [5], call recursively for 2..4
  6 5 4|3|2 1 0 <-- swap [2] with [4], call recursively for 3..3
  6 5 4 3 2 1 0 <-- do nothing because the size is less than 2
# Windows Store app package directories and files
AppPackages/
BundleArtifacts/
Package.StoreAssociation.xml
_pkginfo.txt
*.appx
*.appxbundle
*.appxupload
|0 1 2 3 4 5 6| <-- the array as supplied to the function
  6|1 2 3 4 5|0 <-- swap [0] with [6], call recursively for 1..5
  6 5|2 3 4|1 0 <-- swap [1] with [5], call recursively for 2..4
  6 5 4|3|2 1 0 <-- swap [2] with [4], call recursively for 3..3
  6 5 4 3 2 1 0 <-- do nothing because the size is less than 2
# Visual Studio cache files
# files ending in .cache can be ignored
*.[Cc]ache
# but keep track of directories ending in .cache
!?*.[Cc]ache/
|0 1 2 3 4 5 6| <-- the array as supplied to the function
  6|1 2 3 4 5|0 <-- swap [0] with [6], call recursively for 1..5
  6 5|2 3 4|1 0 <-- swap [1] with [5], call recursively for 2..4
  6 5 4|3|2 1 0 <-- swap [2] with [4], call recursively for 3..3
  6 5 4 3 2 1 0 <-- do nothing because the size is less than 2
# Others
ClientBin/
~$*
*~
*.dbmdl
*.dbproj.schemaview
*.jfm
*.pfx
*.publishsettings
orleans.codegen.cs
|0 1 2 3 4 5 6| <-- the array as supplied to the function
  6|1 2 3 4 5|0 <-- swap [0] with [6], call recursively for 1..5
  6 5|2 3 4|1 0 <-- swap [1] with [5], call recursively for 2..4
  6 5 4|3|2 1 0 <-- swap [2] with [4], call recursively for 3..3
  6 5 4 3 2 1 0 <-- do nothing because the size is less than 2
# Including strong name files can present a security risk
# (https://github.com/github/gitignore/pull/2483#issue-259490424)
#*.snk
|0 1 2 3 4 5 6| <-- the array as supplied to the function
  6|1 2 3 4 5|0 <-- swap [0] with [6], call recursively for 1..5
  6 5|2 3 4|1 0 <-- swap [1] with [5], call recursively for 2..4
  6 5 4|3|2 1 0 <-- swap [2] with [4], call recursively for 3..3
  6 5 4 3 2 1 0 <-- do nothing because the size is less than 2
# Since there are multiple workflows, uncomment next line to ignore bower_components
# (https://github.com/github/gitignore/pull/1529#issuecomment-104372622)
#bower_components/

# RIA/Silverlight projects
Generated_Code/
|0 1 2 3 4 5 6| <-- the array as supplied to the function
  6|1 2 3 4 5|0 <-- swap [0] with [6], call recursively for 1..5
  6 5|2 3 4|1 0 <-- swap [1] with [5], call recursively for 2..4
  6 5 4|3|2 1 0 <-- swap [2] with [4], call recursively for 3..3
  6 5 4 3 2 1 0 <-- do nothing because the size is less than 2
# Backup & report files from converting an old project file
# to a newer Visual Studio version. Backup files are not needed,
# because we have git ;-)
_UpgradeReport_Files/
Backup*/
UpgradeLog*.XML
UpgradeLog*.htm
ServiceFabricBackup/
*.rptproj.bak
|0 1 2 3 4 5 6| <-- the array as supplied to the function
  6|1 2 3 4 5|0 <-- swap [0] with [6], call recursively for 1..5
  6 5|2 3 4|1 0 <-- swap [1] with [5], call recursively for 2..4
  6 5 4|3|2 1 0 <-- swap [2] with [4], call recursively for 3..3
  6 5 4 3 2 1 0 <-- do nothing because the size is less than 2
# SQL Server files
*.mdf
*.ldf
*.ndf
|0 1 2 3 4 5 6| <-- the array as supplied to the function
  6|1 2 3 4 5|0 <-- swap [0] with [6], call recursively for 1..5
  6 5|2 3 4|1 0 <-- swap [1] with [5], call recursively for 2..4
  6 5 4|3|2 1 0 <-- swap [2] with [4], call recursively for 3..3
  6 5 4 3 2 1 0 <-- do nothing because the size is less than 2
# Business Intelligence projects
*.rdl.data
*.bim.layout
*.bim_*.settings
*.rptproj.rsuser
*- [Bb]ackup.rdl
*- [Bb]ackup ([0-9]).rdl
*- [Bb]ackup ([0-9][0-9]).rdl
|0 1 2 3 4 5 6| <-- the array as supplied to the function
  6|1 2 3 4 5|0 <-- swap [0] with [6], call recursively for 1..5
  6 5|2 3 4|1 0 <-- swap [1] with [5], call recursively for 2..4
  6 5 4|3|2 1 0 <-- swap [2] with [4], call recursively for 3..3
  6 5 4 3 2 1 0 <-- do nothing because the size is less than 2
# Microsoft Fakes
FakesAssemblies/
|0 1 2 3 4 5 6| <-- the array as supplied to the function
  6|1 2 3 4 5|0 <-- swap [0] with [6], call recursively for 1..5
  6 5|2 3 4|1 0 <-- swap [1] with [5], call recursively for 2..4
  6 5 4|3|2 1 0 <-- swap [2] with [4], call recursively for 3..3
  6 5 4 3 2 1 0 <-- do nothing because the size is less than 2
# GhostDoc plugin setting file
*.GhostDoc.xml
|0 1 2 3 4 5 6| <-- the array as supplied to the function
  6|1 2 3 4 5|0 <-- swap [0] with [6], call recursively for 1..5
  6 5|2 3 4|1 0 <-- swap [1] with [5], call recursively for 2..4
  6 5 4|3|2 1 0 <-- swap [2] with [4], call recursively for 3..3
  6 5 4 3 2 1 0 <-- do nothing because the size is less than 2
# Node.js Tools for Visual Studio
.ntvs_analysis.dat
node_modules/
|0 1 2 3 4 5 6| <-- the array as supplied to the function
  6|1 2 3 4 5|0 <-- swap [0] with [6], call recursively for 1..5
  6 5|2 3 4|1 0 <-- swap [1] with [5], call recursively for 2..4
  6 5 4|3|2 1 0 <-- swap [2] with [4], call recursively for 3..3
  6 5 4 3 2 1 0 <-- do nothing because the size is less than 2
# Visual Studio 6 build log
*.plg
|0 1 2 3 4 5 6| <-- the array as supplied to the function
  6|1 2 3 4 5|0 <-- swap [0] with [6], call recursively for 1..5
  6 5|2 3 4|1 0 <-- swap [1] with [5], call recursively for 2..4
  6 5 4|3|2 1 0 <-- swap [2] with [4], call recursively for 3..3
  6 5 4 3 2 1 0 <-- do nothing because the size is less than 2
# Visual Studio 6 workspace options file
*.opt
|0 1 2 3 4 5 6| <-- the array as supplied to the function
  6|1 2 3 4 5|0 <-- swap [0] with [6], call recursively for 1..5
  6 5|2 3 4|1 0 <-- swap [1] with [5], call recursively for 2..4
  6 5 4|3|2 1 0 <-- swap [2] with [4], call recursively for 3..3
  6 5 4 3 2 1 0 <-- do nothing because the size is less than 2
# Visual Studio 6 auto-generated workspace file (contains which files were open etc.)
*.vbw
|0 1 2 3 4 5 6| <-- the array as supplied to the function
  6|1 2 3 4 5|0 <-- swap [0] with [6], call recursively for 1..5
  6 5|2 3 4|1 0 <-- swap [1] with [5], call recursively for 2..4
  6 5 4|3|2 1 0 <-- swap [2] with [4], call recursively for 3..3
  6 5 4 3 2 1 0 <-- do nothing because the size is less than 2
# Visual Studio LightSwitch build output
**/*.HTMLClient/GeneratedArtifacts
**/*.DesktopClient/GeneratedArtifacts
**/*.DesktopClient/ModelManifest.xml
**/*.Server/GeneratedArtifacts
**/*.Server/ModelManifest.xml
_Pvt_Extensions
|0 1 2 3 4 5 6| <-- the array as supplied to the function
  6|1 2 3 4 5|0 <-- swap [0] with [6], call recursively for 1..5
  6 5|2 3 4|1 0 <-- swap [1] with [5], call recursively for 2..4
  6 5 4|3|2 1 0 <-- swap [2] with [4], call recursively for 3..3
  6 5 4 3 2 1 0 <-- do nothing because the size is less than 2
# Paket dependency manager
.paket/paket.exe
paket-files/
|0 1 2 3 4 5 6| <-- the array as supplied to the function
  6|1 2 3 4 5|0 <-- swap [0] with [6], call recursively for 1..5
  6 5|2 3 4|1 0 <-- swap [1] with [5], call recursively for 2..4
  6 5 4|3|2 1 0 <-- swap [2] with [4], call recursively for 3..3
  6 5 4 3 2 1 0 <-- do nothing because the size is less than 2
# FAKE - F# Make
.fake/
|0 1 2 3 4 5 6| <-- the array as supplied to the function
  6|1 2 3 4 5|0 <-- swap [0] with [6], call recursively for 1..5
  6 5|2 3 4|1 0 <-- swap [1] with [5], call recursively for 2..4
  6 5 4|3|2 1 0 <-- swap [2] with [4], call recursively for 3..3
  6 5 4 3 2 1 0 <-- do nothing because the size is less than 2
# CodeRush personal settings
.cr/personal
|0 1 2 3 4 5 6| <-- the array as supplied to the function
  6|1 2 3 4 5|0 <-- swap [0] with [6], call recursively for 1..5
  6 5|2 3 4|1 0 <-- swap [1] with [5], call recursively for 2..4
  6 5 4|3|2 1 0 <-- swap [2] with [4], call recursively for 3..3
  6 5 4 3 2 1 0 <-- do nothing because the size is less than 2
# Python Tools for Visual Studio (PTVS)
__pycache__/
*.pyc
|0 1 2 3 4 5 6| <-- the array as supplied to the function
  6|1 2 3 4 5|0 <-- swap [0] with [6], call recursively for 1..5
  6 5|2 3 4|1 0 <-- swap [1] with [5], call recursively for 2..4
  6 5 4|3|2 1 0 <-- swap [2] with [4], call recursively for 3..3
  6 5 4 3 2 1 0 <-- do nothing because the size is less than 2
# Cake - Uncomment if you are using it
# tools/**
# !tools/packages.config
|0 1 2 3 4 5 6| <-- the array as supplied to the function
  6|1 2 3 4 5|0 <-- swap [0] with [6], call recursively for 1..5
  6 5|2 3 4|1 0 <-- swap [1] with [5], call recursively for 2..4
  6 5 4|3|2 1 0 <-- swap [2] with [4], call recursively for 3..3
  6 5 4 3 2 1 0 <-- do nothing because the size is less than 2
# Tabs Studio
*.tss
|0 1 2 3 4 5 6| <-- the array as supplied to the function
  6|1 2 3 4 5|0 <-- swap [0] with [6], call recursively for 1..5
  6 5|2 3 4|1 0 <-- swap [1] with [5], call recursively for 2..4
  6 5 4|3|2 1 0 <-- swap [2] with [4], call recursively for 3..3
  6 5 4 3 2 1 0 <-- do nothing because the size is less than 2
# Telerik's JustMock configuration file
*.jmconfig
|0 1 2 3 4 5 6| <-- the array as supplied to the function
  6|1 2 3 4 5|0 <-- swap [0] with [6], call recursively for 1..5
  6 5|2 3 4|1 0 <-- swap [1] with [5], call recursively for 2..4
  6 5 4|3|2 1 0 <-- swap [2] with [4], call recursively for 3..3
  6 5 4 3 2 1 0 <-- do nothing because the size is less than 2
# BizTalk build output  
*.btp.cs|0 1 2 3 4 5 6| <-- the array as supplied to the function
  6|1 2 3 4 5|0 <-- swap [0] with [6], call recursively for 1..5
  6 5|2 3 4|1 0 <-- swap [1] with [5], call recursively for 2..4
  6 5 4|3|2 1 0 <-- swap [2] with [4], call recursively for 3..3
  6 5 4 3 2 1 0 <-- do nothing because the size is less than 2
*.btm.cs
*.odx.cs
*.xsd.cs
 |0 1 2 3 4 5 6| <-- the array as supplied to the function
  6|1 2 3 4 5|0 <-- swap [0] with [6], call recursively for 1..5
  6 5|2 3 4|1 0 <-- swap [1] with [5], call recursively for 2..4
  6 5 4|3|2 1 0 <-- swap [2] with [4], call recursively for 3..3
  6 5 4 3 2 1 0 <-- do nothing because the size is less than 2
# OpenCover UI analysis results
OpenCover/

# Azure Stream Analytics local run output
ASALocalRun/
|0 1 2 3 4 5 6| <-- the array as supplied to the function
  6|1 2 3 4 5|0 <-- swap [0] with [6], call recursively for 1..5
  6 5|2 3 4|1 0 <-- swap [1] with [5], call recursively for 2..4
  6 5 4|3|2 1 0 <-- swap [2] with [4], call recursively for 3..3
  6 5 4 3 2 1 0 <-- do nothing because the size is less than 2
# MSBuild Binary and Structured Log
*.binlog
|0 1 2 3 4 5 6| <-- the array as supplied to the function
  6|1 2 3 4 5|0 <-- swap [0] with [6], call recursively for 1..5
  6 5|2 3 4|1 0 <-- swap [1] with [5], call recursively for 2..4
  6 5 4|3|2 1 0 <-- swap [2] with [4], call recursively for 3..3
  6 5 4 3 2 1 0 <-- do nothing because the size is less than 2
# NVidia Nsight GPU debugger configuration file
*.nvuser
|0 1 2 3 4 5 6| <-- the array as supplied to the function
  6|1 2 3 4 5|0 <-- swap [0] with [6], call recursively for 1..5
  6 5|2 3 4|1 0 <-- swap [1] with [5], call recursively for 2..4
  6 5 4|3|2 1 0 <-- swap [2] with [4], call recursively for 3..3
  6 5 4 3 2 1 0 <-- do nothing because the size is less than 2
# MFractors (Xamarin productivity tool) working folder
.mfractor/
|0 1 2 3 4 5 6| <-- the array as supplied to the function
  6|1 2 3 4 5|0 <-- swap [0] with [6], call recursively for 1..5
  6 5|2 3 4|1 0 <-- swap [1] with [5], call recursively for 2..4
  6 5 4|3|2 1 0 <-- swap [2] with [4], call recursively for 3..3
  6 5 4 3 2 1 0 <-- do nothing because the size is less than 2
# Local History for Visual Studio
.localhistory/
|0 1 2 3 4 5 6| <-- the array as supplied to the function
  6|1 2 3 4 5|0 <-- swap [0] with [6], call recursively for 1..5
  6 5|2 3 4|1 0 <-- swap [1] with [5], call recursively for 2..4
  6 5 4|3|2 1 0 <-- swap [2] with [4], call recursively for 3..3
  6 5 4 3 2 1 0 <-- do nothing because the size is less than 2
# BeatPulse healthcheck temp database
healthchecksdb
|0 1 2 3 4 5 6| <-- the array as supplied to the function
  6|1 2 3 4 5|0 <-- swap [0] with [6], call recursively for 1..5
  6 5|2 3 4|1 0 <-- swap [1] with [5], call recursively for 2..4
  6 5 4|3|2 1 0 <-- swap [2] with [4], call recursively for 3..3
  6 5 4 3 2 1 0 <-- do nothing because the size is less than 2
# Backup folder for Package Reference Convert tool in Visual Studio 2017
MigrationBackup/
|0 1 2 3 4 5 6| <-- the array as supplied to the function
  6|1 2 3 4 5|0 <-- swap [0] with [6], call recursively for 1..5
  6 5|2 3 4|1 0 <-- swap [1] with [5], call recursively for 2..4
  6 5 4|3|2 1 0 <-- swap [2] with [4], call recursively for 3..3
  6 5 4 3 2 1 0 <-- do nothing because the size is less than 2
# Ionide (cross platform F# VS Code tools) working folder
.ionide/
|0 1 2 3 4 5 6| <-- the array as supplied to the function
  6|1 2 3 4 5|0 <-- swap [0] with [6], call recursively for 1..5
  6 5|2 3 4|1 0 <-- swap [1] with [5], call recursively for 2..4
  6 5 4|3|2 1 0 <-- swap [2] with [4], call recursively for 3..3
  6 5 4 3 2 1 0 <-- do nothing because the size is less than 2
# Fody - auto-generated XML schema
FodyWeavers.xsd 
